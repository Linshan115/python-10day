from bs4 import BeautifulSoup     #网页解析，获取数据
import re       #正则表达式，进行文字匹配
import urllib.request,urllib.error      #制定url,获取网页数据
import xlwt     #进行excel操作
import sqlite3  #进行SQLite数据库操作

def main():
    baseurl = "https://movie.douban.com/top250?start="
    #1.爬取网页
    datalist = getData(baseurl)
    #2.逐一解析数据
    savepath = ".\\豆瓣电影Top250.xls"
    #3.保存数据
    saveData(datalist,savepath)



#影片详情的链接
findLink = re.compile(r'<a href="(.*?)">')             #创建正则表达式对象，表示规则
#图片的链接
findImgSrc = re.compile(r'img.*src="(.*?)"',re.S)       #让换行符包含在字符中
#影片的片名
findTitle = re.compile(r'<span class="title">(.*)</span>')
#影片的评分
findRating = re.compile(r'<span class="rating_num" property="v:average">(.*)</span>')
#找到评价人数
findJudge = re.compile(r'</span>(/d*)人评价</span>')
#找到概况
findInq = re.compile(r'<span class="inq">(.*)</span>')
#找到影片的相关内容
findBd = re.compile(r'<p class="">(.*?)</p>',re.S)




#爬取网页
def getData(baseurl):
    datalist=[]
    for i in range(0,10):               #调用获取页面函数10次
        url = baseurl  + str(i*25)
        html = askURL(url)             #保存获取到的网页源码
# 2.逐一解析数据
        soup = BeautifulSoup(html,"html.parser")
        for item in soup.find_all('div',class_="item"): #查找符合要求的字符串
        #print(item)            测试查看电影item全部信息
            data = []   #保存一部电影所有信息
            item = str(item)

        #获取影片详情的超链接
            Link = re.findall(findLink,item)[0]             #通过正则表达式查找指定的字符串
            data.append(Link)
            ImgSrc  = re.findall(findImgSrc,item)[0]
            data.append(ImgSrc)
            Title = re.findall(findTitle,item)
            if (len(Title) == 2):
                ctitle = Title[0]
                data.append(ctitle)                     #添加中文名
                otitle = Title[1].replace("/","")       #去掉无关的符号
                data.append(otitle)                     #添加外文名
            else:
                data.append(Title[0])
                data.append(' ')            #留空
            Rating = re.findall(findRating,item)[0]
            data.append(Rating)
            Judge = re.findall(findJudge,item)[0]
            data.append(Judge)
            Inq =  re.findall(findInq,item)
            if len(Inq) != 0:
                Inq =   Inq[0].replace("。","")      #去掉句号
                data.append(Inq)
            else:
                data.append(' ')
            Bd = re.findall(findBd,item)[0]
            Bd = re.sub(r'<br(\s+)?/>(\s+)?'," ",Bd)
            Bd = re.sub(r'/',' ',Bd)  #替换/
            data.append(Bd.strip())         #去掉前后的空格

            datalist.append(data)       #把处理好的额一部电影的信息放入datalist
    return datalist



#得到指定一个url的网页信息
def askURL(url):
    head = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36"
    }
                        #用户代理表示，代表告诉豆瓣服务器，我们是什么类型的机器、浏览器（本质上是告诉浏览器，我们可以接收什么样的信息）
    request = urllib.request.Request(url,headers=head)
    html = ""
    try:
        responce = urllib.request.urlopen(request)
        html = responce.read().decode("utf-8")
    except urllib.error.URLError as e:
        if hasattr(e,"code"):
            print(e.code)
        if hasattr(e,"reason"):
            print(e.reason)

    return html



#3.保存数据
def saveData(datalist,savepath):
    workbook = xlwt.Workbook(encoding="utf-8")
    worksheet = workbook.add_sheet('豆瓣电影TOP250')
    col = ("电影详情链接","图片链接","影片中文名","影片外国名","评分","评价数","概况","相关信息")
    for i in range(0,8):
        worksheet.write(0,i,col[i])
    for i in range(0,250):
        print("第%d条"%(i+1))
        data = datalist[i]
        for j in range(0,8):
            worksheet.write(i+1,j,data[j])
    workbook.save(savepath)





if __name__ == "__main__":      #当程序执行时
#调用函数
    main()
    print("爬取完毕")
